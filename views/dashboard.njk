{% extends "layout.njk" %}
{% block title %}
  Dashboard
{% endblock title %}
{% block content %}
  <!-- Welcome Card -->
  <div class="card">
    <div class="card-header">
      <h1>Welcome to Enspira, {{ user.display_name }}</h1>
    </div>
    <p>Manage your Enspira AI assistant for your Twitch channel.</p>
    <!-- AI Assistant Settings -->
    <div class="two-column">
      <div class="card">
        <h2>Character Settings</h2>
        <p>Customize your AI assistant's personality, appearance, and behavior.</p>
        <a href="/web/character" class="btn btn-primary">Edit Character</a>
      </div>
      <div class="card">
        <h2>World Settings</h2>
        <p>Set up the environment and context for your AI assistant.</p>
        <a href="/web/world" class="btn btn-primary">Edit World</a>
      </div>
    </div>
  </div>
  <!-- Stream Status Card -->
  <div class="card">
    <h2>Stream Status</h2>
    {% if streamStatus.online %}
      <div class="stream-info">
        <div class="stream-header">
          <div class="stream-status online">
            <span class="status-indicator"></span>
            <span>Live</span>
          </div>
          <div class="stream-time">
            <svg xmlns="http://www.w3.org/2000/svg"
                 width="16"
                 height="16"
                 viewBox="0 0 24 24"
                 fill="none"
                 stroke="currentColor"
                 stroke-width="2"
                 stroke-linecap="round"
                 stroke-linejoin="round">
              <circle cx="12" cy="12" r="10"></circle>
              <polyline points="12 6 12 12 16 14"></polyline>
            </svg>
            <span>{{ streamStatus.duration }}</span>
          </div>
        </div>
        <div class="stream-content">
          {% if streamStatus.thumbnail %}
            <div class="stream-thumbnail">
              <img height="100%"
                   width="100%"
                   src="{{ streamStatus.thumbnail }}"
                   alt="Stream Thumbnail"
                   class="fade-in-image">
            </div>
          {% endif %}
          <div class="stream-details">
            <h3 class="stream-title">{{ streamStatus.title }}</h3>
            <div class="stream-game">
              <span>Playing:</span> {{ streamStatus.game }}
            </div>
            <div class="stream-metrics">
              <div class="metric">
                <svg xmlns="http://www.w3.org/2000/svg"
                     width="16"
                     height="16"
                     viewBox="0 0 24 24"
                     fill="none"
                     stroke="currentColor"
                     stroke-width="2"
                     stroke-linecap="round"
                     stroke-linejoin="round">
                  <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                  <circle cx="9" cy="7" r="4"></circle>
                  <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
                  <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                </svg>
                <span>{{ streamStatus.viewers }} viewers</span>
              </div>
              <div class="metric">
                <svg xmlns="http://www.w3.org/2000/svg"
                     width="16"
                     height="16"
                     viewBox="0 0 24 24"
                     fill="none"
                     stroke="currentColor"
                     stroke-width="2"
                     stroke-linecap="round"
                     stroke-linejoin="round">
                  <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z">
                  </path>
                </svg>
                <span>{{ followerCount }} followers</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    {% else %}
      <div class="stream-info offline">
        <div class="stream-status offline">
          <span class="status-indicator"></span>
          <span>Offline</span>
        </div>
        <div class="offline-details">
          <div class="metric">
            <svg xmlns="http://www.w3.org/2000/svg"
                 width="16"
                 height="16"
                 viewBox="0 0 24 24"
                 fill="none"
                 stroke="currentColor"
                 stroke-width="2"
                 stroke-linecap="round"
                 stroke-linejoin="round">
              <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z">
              </path>
            </svg>
            <span>{{ followerCount }} followers</span>
          </div>
          {% if lastGame %}
            <div class="last-game">
              <span>Last played:</span> {{ lastGame }}
            </div>
          {% endif %}
        </div>
      </div>
    {% endif %}
  </div>
  <!-- Twitch Integration Card -->
  <div class="card">
    <h2>Twitch Integration</h2>
    <p>Connect your Twitch streamer and bot accounts.</p>
    <div class="two-column">
      <div>
        <h3>Streamer Account</h3>
        {% if streamerConnected %}
          <p class="alert alert-success">Connected as: {{ streamerName }}</p>
        {% else %}
          <p class="alert alert-error">Not connected</p>
        {% endif %}
        <!-- Direct link to connect streamer account -->
        <a href="/api/v1/auth/twitch/connect?type=streamer"
           class="btn btn-secondary">
          {% if streamerConnected %}
            Reconnect Streamer Account
          {% else %}
            Connect Streamer Account
          {% endif %}
        </a>
      </div>
      <div>
        <h3>Bot Account</h3>
        {% if botConnected %}
          <p class="alert alert-success">Connected as: {{ botName }}</p>
        {% else %}
          <p class="alert alert-error">Not connected</p>
        {% endif %}
        <!-- Direct link to connect bot account -->
        <a href="/api/v1/auth/twitch/connect?type=bot" class="btn btn-secondary">
          {% if botConnected %}
            Reconnect Bot Account
          {% else %}
            Connect Bot Account
          {% endif %}
        </a>
      </div>
    </div>
  </div>
  <!-- Quick Stats Card -->
  <div class="card">
    <h2>Quick Stats</h2>
    <div class="two-column">
      <div>
        <h3>Chat Messages</h3>
        <p>{{ stats.chatMessages }} messages processed</p>
      </div>
    </div>
  </div>
  <!-- Help Card -->
  <div class="card">
    <h2>Still Confused?</h2>
    <p>Learn how to create your character and world in our help section.</p>
    <a href="/web/help" class="btn btn-primary">Get Help</a>
  </div>
{% endblock content %}
{% block extraStyles %}
  <style>
  .stream-info {
    border-radius: 6px;
    overflow: hidden;
  }

  .alert {
    padding: 4px 8px
  }

  .stream-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 15px;
    background-color: var(--card-bg);
    border-bottom: 1px solid var(--border);
  }

  .stream-status {
    display: flex;
    align-items: center;
    font-weight: bold;
  }

  .stream-status.online {
    color: #56d364;
  }

  .stream-status.offline {
    color: #f85149;
  }

  .status-indicator {
    display: inline-block;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    margin-right: 6px;
  }

  .stream-status.online .status-indicator {
    background-color: #56d364;
    box-shadow: 0 0 0 2px rgba(86, 211, 100, 0.3);
    animation: pulse 2s infinite;
  }

  .stream-status.offline .status-indicator {
    background-color: #f85149;
  }

  .stream-time {
    display: flex;
    align-items: center;
    color: var(--secondary-text);
  }

  .stream-time svg {
    margin-right: 5px;
  }

  .stream-content {
    display: flex;
    padding: 15px;
    gap: 15px;
  }

  .stream-thumbnail {
    width: 320px;
    height: 180px;
    overflow: hidden;
    border-radius: 4px;
    flex-shrink: 0;
  }

  .stream-thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    opacity: 0;
    transition: opacity 0.4s ease-in;
  }
  
  .stream-thumbnail img.loaded {
    opacity: 1;
  }

  .stream-details {
    flex: 1;
  }

  .stream-title {
    margin-top: 0;
    margin-bottom: 10px;
    font-size: 18px;
  }

  .stream-game {
    margin-bottom: 15px;
    color: var(--accent);
  }

  .stream-metrics {
    display: flex;
    gap: 20px;
  }

  .metric {
    display: flex;
    align-items: center;
  }

  .metric svg {
    margin-right: 5px;
    color: var(--accent);
  }

  .offline-details {
    padding: 15px;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .last-game {
    color: var(--secondary-text);
  }

  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(86, 211, 100, 0.7);
    }
    70% {
      box-shadow: 0 0 0 5px rgba(86, 211, 100, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(86, 211, 100, 0);
    }
  }

  @media (max-width: 768px) {
    .stream-content {
      flex-direction: column;
    }

    .stream-thumbnail {
      width: 100%;
      height: auto;
      aspect-ratio: 16/9;
    }
  }
  </style>
{% endblock extraStyles %}
{% block extraScripts %}
  <script>
  document.addEventListener('DOMContentLoaded', () => {
    const images = document.querySelectorAll('.fade-in-image');
    
    images.forEach(img => {
      // For images that are already loaded from cache
      if (img.complete) {
        img.classList.add('loaded');
      } else {
        // For images that need to be loaded
        img.addEventListener('load', () => {
          img.classList.add('loaded');
        });
        
        // Fallback in case image fails to load
        img.addEventListener('error', () => {
          img.classList.add('loaded');
        });
      }
    });
  });
  </script>
{% endblock extraScripts %}
